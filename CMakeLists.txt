if(DEFINED ENV{GLOBAL_TOOLCHAIN})
    message("Set toolchain $ENV{GLOBAL_TOOLCHAIN}")
    set(CMAKE_TOOLCHAIN_FILE $ENV{GLOBAL_TOOLCHAIN})
endif()

cmake_minimum_required(VERSION 3.10)
project(SimpleGlitch2)

find_package(Nuke REQUIRED)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(SRC_FILE src/SimpleGlitch.cpp)

if (DEFINED NUKE_ROOT)
    string(REGEX MATCH "Nuke([0-9]+)\\.([0-9]+)" NUKE_VERSION_MATCH ${NUKE_ROOT})

    if (NUKE_VERSION_MATCH)
        set(NUKE_MAJOR_VERSION "${CMAKE_MATCH_1}")
        set(NUKE_MINOR_VERSION "${CMAKE_MATCH_2}")
        message("Detected Nuke version: ${NUKE_MAJOR_VERSION}.${NUKE_MINOR_VERSION}")

        if (NUKE_MAJOR_VERSION STREQUAL "12")
            message("Configuring plugin for Nuke 12 ...")
            set(CMAKE_POSITION_INDEPENDENT_CODE TRUE)
            function(add_nuke_plugin PLUGIN_NAME)
                add_library(${PLUGIN_NAME} MODULE ${ARGN})
                add_library(NukePlugins::${PLUGIN_NAME} ALIAS ${PLUGIN_NAME})
                target_link_libraries(${PLUGIN_NAME} PRIVATE Nuke::NDK)
                target_compile_definitions(${PLUGIN_NAME} PRIVATE FN_EXAMPLE_PLUGIN)
                set_target_properties(${PLUGIN_NAME} PROPERTIES PREFIX "")
                if (APPLE)
                    set_target_properties(${PLUGIN_NAME} PROPERTIES SUFFIX ".dylib")
                endif()
            endfunction()
            function(add_plugin PLUGIN_NAME)
                add_nuke_plugin(${PLUGIN_NAME} ${ARGN})
                target_compile_definitions(${PLUGIN_NAME} PRIVATE FN_PLUGIN)
            endfunction()
            add_plugin(${CMAKE_PROJECT_NAME} ${SRC_FILE})
        elseif (NUKE_MAJOR_VERSION GREATER_EQUAL "13")
            message("Configuring plugin for Nuke 13 or later ...")
            function(add_plugin PLUGIN_NAME)
                add_nuke_plugin(${PLUGIN_NAME} ${ARGN})
                target_compile_definitions(${PLUGIN_NAME} PRIVATE FN_PLUGIN)
            endfunction()
            add_plugin(${CMAKE_PROJECT_NAME} ${SRC_FILE})
        else()
            message(FATAL_ERROR "Unsupported Nuke version: ${NUKE_MAJOR_VERSION}.${NUKE_MINOR_VERSION}")
        endif()
    endif()
endif()
